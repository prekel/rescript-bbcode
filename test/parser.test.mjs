// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Opal from "../src/vendor/opal/opal.mjs";
import * as Zora from "zora";
import * as BBCode from "../src/BBCode.mjs";

Zora.test("Parse [From ..", (function (t) {
        var a = BBCode.parse("arsar [Frsato [url=https://example.com/]urlcontent[/url]");
        t.equal(a, {
              hd: {
                TAG: /* Text */0,
                _0: "arsar [Frsato "
              },
              tl: {
                hd: {
                  TAG: /* LinkNamed */15,
                  children: {
                    hd: {
                      TAG: /* Text */0,
                      _0: "urlcontent"
                    },
                    tl: /* [] */0
                  },
                  url: "https://example.com/"
                },
                tl: /* [] */0
              }
            }, "");
        
      }));

Zora.test("textparser test", (function (t) {
        var a1 = BBCode.Parse.run("123456789012345678901234567", Opal.many(BBCode.Parse.text_parser));
        t.equal(a1, {
              hd: {
                TAG: /* Text */0,
                _0: "1234567890"
              },
              tl: {
                hd: {
                  TAG: /* Text */0,
                  _0: "1234567890"
                },
                tl: {
                  hd: {
                    TAG: /* Text */0,
                    _0: "1234567"
                  },
                  tl: /* [] */0
                }
              }
            }, "");
        
      }));

Zora.test("many' test", (function (t) {
        var a1 = BBCode.Parse.run("12345678901234567890", Opal.$eq$great(BBCode.Parse.many$p(Opal.digit, 10), Opal.implode));
        t.equal(a1, "1234567890", "");
        var a1$1 = BBCode.Parse.run("12345", Opal.$eq$great(BBCode.Parse.many$p(Opal.digit, 10), Opal.implode));
        t.equal(a1$1, "12345", "");
        
      }));

export {
  
}
/*  Not a pure module */
