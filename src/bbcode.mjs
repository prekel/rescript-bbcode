// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Opal from "./vendor/opal/opal.mjs";
import * as $$Array from "rescript/lib/es6/array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var rsb = Opal.exactly(/* ']' */93);

var lsb = Opal.exactly(/* '[' */91);

var eql = Opal.exactly(/* '=' */61);

var slash = Opal.exactly(/* '/' */47);

var bbcodetag = Opal.$less$less(Opal.$eq$great(Opal.$great$great(lsb, Opal.many(Opal.letter)), Opal.implode), rsb);

var closedtag = Opal.$less$less(Opal.$eq$great(Opal.$great$great(Opal.$great$great(lsb, slash), Opal.many(Opal.letter)), Opal.implode), rsb);

function pqwf(inqOpt, stck) {
  var inq = inqOpt !== undefined ? Caml_option.valFromOption(inqOpt) : undefined;
  console.log($$Array.of_list(stck));
  var partial_arg;
  if (inq !== undefined) {
    partial_arg = (function (param) {
        return Opal.$$return(/* [] */0, param);
      });
  } else {
    var partial_arg$1 = Opal.$eq$great(Opal.$eq$great(Opal.many(Opal.letter), Opal.implode), (function (it) {
            return {
                    TAG: /* Text */0,
                    _0: it
                  };
          }));
    var partial_arg$2 = function (param) {
      return Opal.$great$great$eq(partial_arg$1, (function (it) {
                    var partial_arg = pqwf(Caml_option.some(it), stck);
                    return function (param) {
                      return Opal.$great$great$eq(partial_arg, (function (it2) {
                                    var partial_arg = [
                                      it,
                                      it2
                                    ];
                                    return function (param) {
                                      return Opal.$$return(partial_arg, param);
                                    };
                                  }), param);
                    };
                  }), param);
    };
    partial_arg = (function (param) {
        return Opal.$great$great$eq(partial_arg$2, (function (param) {
                      var partial_arg_0 = param[0];
                      var partial_arg_1 = param[1];
                      var partial_arg = {
                        hd: partial_arg_0,
                        tl: partial_arg_1
                      };
                      return function (param) {
                        return Opal.$$return(partial_arg, param);
                      };
                    }), param);
      });
  }
  return function (param) {
    return Opal.$less$pipe$great((function (param) {
                  return Opal.$great$great$eq((function (param) {
                                return Opal.$great$great$eq((function (param) {
                                              return Opal.$great$great$eq(bbcodetag, (function (tg) {
                                                            var partial_arg = pqwf(undefined, {
                                                                  hd: tg,
                                                                  tl: stck
                                                                });
                                                            return function (param) {
                                                              return Opal.$great$great$eq(partial_arg, (function (it) {
                                                                            var partial_arg = [
                                                                              tg,
                                                                              it
                                                                            ];
                                                                            return function (param) {
                                                                              return Opal.$$return(partial_arg, param);
                                                                            };
                                                                          }), param);
                                                            };
                                                          }), param);
                                            }), (function (param) {
                                              var ai = param[1];
                                              var tg = param[0];
                                              return function (param) {
                                                return Opal.$great$great$eq(closedtag, (function (ctg) {
                                                              var partial_arg = [
                                                                tg,
                                                                ctg,
                                                                ai
                                                              ];
                                                              return function (param) {
                                                                return Opal.$$return(partial_arg, param);
                                                              };
                                                            }), param);
                                              };
                                            }), param);
                              }), (function (param) {
                                if (param[0] !== param[1]) {
                                  return Opal.mzero;
                                }
                                var partial_arg_0 = {
                                  TAG: /* Bold */1,
                                  _0: param[2]
                                };
                                var partial_arg = {
                                  hd: partial_arg_0,
                                  tl: /* [] */0
                                };
                                return function (param) {
                                  return Opal.$$return(partial_arg, param);
                                };
                              }), param);
                }), partial_arg, param);
  };
}

function run(str, parser) {
  return Opal.parse(parser, Opal.LazyStream.of_string(str));
}

var Parse = {
  rsb: rsb,
  lsb: lsb,
  eql: eql,
  slash: slash,
  bbcodetag: bbcodetag,
  closedtag: closedtag,
  pqwf: pqwf,
  run: run
};

export {
  Parse ,
  
}
/* rsb Not a pure module */
